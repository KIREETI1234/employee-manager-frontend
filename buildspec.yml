version: 0.2

env:
  variables:
    AWS_REGION: "us-east-1"
    ECR_REPO: "084828586975.dkr.ecr.us-east-1.amazonaws.com/three-tier-frontend"
    IMAGE_TAG: "latest"
    NAMESPACE: "projectmanager"

phases:
  install:
    runtime-versions:
      nodejs: 16
    commands:
      - echo Installing project dependencies...
      - npm ci

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPO

  build:
    commands:
      - echo Building Angular project...
      - npx ng build --configuration production
      - echo Building Docker image...
      - docker build -t $ECR_REPO:$IMAGE_TAG .

  post_build:
    commands:
      - echo Pushing Docker image to ECR...
      - docker push $ECR_REPO:$IMAGE_TAG
      - echo Rendering Kubernetes manifests...
      - mkdir -p k8s-out
      - sed "s|IMAGE_PLACEHOLDER|$ECR_REPO:$IMAGE_TAG|g" k8s/frontend-deployment.yaml > k8s-out/deployment.yaml
      - cp k8s/namespace.yaml k8s-out/namespace.yaml
      - echo Applying namespace and deployment to EKS...
      - kubectl apply -f k8s-out/namespace.yaml
      - kubectl apply -f k8s-out/deployment.yaml
      - echo Waiting for rollout to complete...
      - kubectl rollout status deployment/frontend -n $NAMESPACE
      - echo âœ… Frontend deployed successfully

artifacts:
  base-directory: k8s-out
  files:
    - deployment.yaml
    - namespace.yaml
